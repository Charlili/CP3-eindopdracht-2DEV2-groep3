{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/script.js","js/src/classes/FlowchartApplication.js","js/src/classes/Line.js","js/src/classes/Shape.js","js/src/classes/Toolbar.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxpfile":"script.dist.js","sourceRoot":"../","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(){\n\tconsole.log('Goed bezig Charlotte.');\n\n\t\n\tfunction init() {\n\t\tconsole.log('test');\n\t\tif(getParameterByName('page') != undefined && (getParameterByName('page') === 'overview' || getParameterByName('page') === 'group')){\n\t\t\tconsole.log('Time to make apps');\n\t\t\tvar FlowchartApplication = require('./classes/FlowchartApplication.js');\n\t\t\tvar flowchartApplication = new FlowchartApplication($('.app'));\n\t\t}\n\t\t//console.log(getParameterByName('page'));\n\t\t//login klik\n\t\tif(getParameterByName('page') == undefined || getParameterByName('page') === 'home' ){\n\t\t\tvar login = document.querySelector('.login');\n\t\t\tlogin.addEventListener('click',clickHandlerLogin);\n\t\t}\n\n\t\tif(getParameterByName('page') === 'listgroups' ){\n\t\t\tvar addgroup = document.querySelector('.addgroup');\n\t\t\taddgroup.addEventListener('click',clickHandlerAddgroup);\n\t\t\tvar myform = document.getElementById('myform');\n\t\t}\n\n\t\tif(getParameterByName('page') === 'add' || getParameterByName('page') === 'overview'  ){\n\t\t\t//title live change\n\t\t\t$('#viewerchanger').keyup(function(){\n\t\t\t\tvar str = $(this).val();\n\t\t\t\t$(\"#viewer\").text(str);\n\t\t\t});\n\n\t\t}\n\n\t\t/*if(getParameterByName('page') == 'saveImage'){\n\t\t\trequire('../vendor/phantomjs/bin/phantomjs');\n\t\t\tvar system = require('system');\n \n\t\t\t// Web Address (URL) of the page to capture\n\t\t\t//var url  = system.args[1];\n\t\t\t var url = \"http://localhost/CPIII/CPIII_whiteboard/index.php?page=overview&id=35\";\n\t\t\t var page = 'testingThis' + '.png';\n\t\t\t// File name of the captured image\n\t\t\t//var file = system.args[2]  + \".png\";\n\t\t\t \n\t\t\tvar page = require('webpage').create();\n\t\t\t \n\t\t\t// Browser size - height and width in pixels\n\t\t\t// Change the viewport to 480x320 to emulate the iPhone\n\t\t\tpage.viewportSize = { width: 1200, height : 800 };\n\t\t\t \n\t\t\t// Set the User Agent String \n\t\t\t// You can change it to iPad or Android for mobile screenshots\n\t\t\tpage.settings.userAgent = \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\";\n\t\t\t \n\t\t\t// Render the screenshot image\n\t\t\tpage.open ( url, function ( status ) {\n\t\t\t  if ( status !== \"success\") {\n\t\t\t       console.log(\"Could not open web page : \" + url);\n\t\t\t       phantom.exit();\n\t\t\t   } else {\n\t\t\t       window.setTimeout ( function() {\n\t\t\t          page.render(file);\n\t\t\t          console.log(\"Download the screenshot : \" + file);\n\t\t\t          phantom.exit();\n\t\t\t       }, 1000);\n\t\t\t   }\n\t\t\t});\n\t\t}*/\n\n\t}\n\n\tfunction clickHandlerLogin(){\n\t\tevent.preventDefault();\n\t\tconsole.log(this);\n\t\tvar loginform = document.querySelector('.hidden');\n\t\tloginform.classList.toggle('open');\n\t}\n\n\tfunction clickHandlerAddgroup(){\n\t\tevent.preventDefault();\n\t\tvar searchgroup = document.querySelector('.searchgroup');\n\t\tsearchgroup.classList.toggle('test');\n\t}\n\n\tinit();\n\n\t//function to get $_GET values\n\tfunction getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n\t}\n})();","module.exports = (function(){\n\n\tvar Toolbar = require('./Toolbar.js');\n\tvar Shape = require('./Shape.js');\n\tvar Line = require('./Line.js');\n\tvar shapes = [];\n\tvar lines = [];\n\tvar tempArray = [];\n\tvar creatingLine = false;\n\tvar point = [];\n\tvar id = 1;\n\n\tif($('#cnvs').length != 0){\n\t\tpaper.install(window);\n\t\tpaper.setup('cnvs');\n\t}\n\n\t\n\tfunction FlowchartApplication($el) {\n\t\t\n\t\tthis.selected = 0;\n\t\tconsole.log('Making app....');\n\n\t\tthis.$el = $el;\n\t\tthis.tool = 'shape';\n\t\tthis.toolbar = new Toolbar($el);\n\t\tthis.shapeColor = '#bbb';\n\t\tthis.textSize = '1.5em';\n\t\t\n\t\tvar shape;\n\t\tthis.$el.click(this.clickHandler.bind(this));\n\t\tif($('#cnvs').length != 0){\n\t\t\tvar tool = new Tool();\n\t\t\ttool.onMouseDown = this.clickHandler.bind(this);\n\t\t\ttool.onMouseMove = this.hoverHandler.bind(this);\n\t\t}\n\n\t\t$('.save-flowchart').click(this.save);\n\t\tif(getParameterByName('id') != ''){\n\t\t\t$.get('index.php?page=loadFlowchart&id='+getParameterByName('id'),function(data){\n\t\t\t\tthis.createFlowchart(data);\n\t\t\t}.bind(this));\t\n\t\t}\n\t\t$('.add').click(this.sendInvite).bind(this);\n\t\t//bean.on(this.deleteButton, 'click', this.removeHandler.bind(this));\n\t\tbean.on(this.toolbar,'changeTool',this.changeTool.bind(this));\n\t\tbean.on(this.toolbar,'delete',this.deleteSelected.bind(this));\n\t\tbean.on(this.toolbar,'uploadFile',this.uploadFile.bind(this));\n\t\tbean.on(this.toolbar,'color',this.changeColor.bind(this));\n\t\t//bean.on(this.toolbar,'align',this.changeAlign.bind(this));\n\t\t//bean.on(this.toolbar,'size',this.changeSize.bind(this));\n\n\t}\n\t/*FlowchartApplication.prototype.changeSelected = function(obj){\n\t\t//change tool\n\t\tconsole.log('selecting');\n\t\tthis.selected = obj;\n\t\tconsole.log(this.selected);\n\t\t//this.tool = tool;\n\t};*/\n\tFlowchartApplication.prototype.sendInvite = function(e){\n\t\te.preventDefault();\n\t\tif($('.inputInvite').length == 0){\n\t\t\t\n\t\t\tvar input = document.createElement('input');\n\t\t\tinput.placeholder = \"Enter an email to invite friends.\"\n\t\t\tinput.classList.add('inputInvite');\n\t\t\te.currentTarget.querySelector('p').innerText = 'Send invite';\n\t\t\tconsole.log(e.currentTarget.querySelector('p'));\n\t\t\t$(e.currentTarget).parent().append(input);\n\t\t}else{\n\t\t\tconsole.log($('.groupinfo h1').html());\n\t\t\tdata = {'email' : $('.inputInvite').val(),\n\t\t\t\t\t'groupId' : getParameterByName('groupid'),\n\t\t\t\t\t'groupName' : $('.groupinfo h1').html()\n\t\t\t\t};\n\n\t\t\t$.post('index.php?page=sendInvite',data).success(function(){\n\t\t\t\tlocation.reload();\n\n\t\t\t});\n\t\t}\n\n\n\t}\n\tFlowchartApplication.prototype.uploadFile = function(files){\n\t\tconsole.log(files);\n\t\tvar error = '';\n\t\tif(files.length > 0){\n\t\t\t\n\t\t\tvar ratio = 1;\n\t\t\tvar type= \"text\";\n\t\t\tvar content = \"\";\n\t\t\t\n\n\t\t\tvar file = files[0];\n\t\t\tvar index = file.type.indexOf(\"/\");\n\t\t\tif (index > 0){\n\t\t\t   type = file.type.substr(0, index);\n\t\t\t   console.log(type);\n\t\t\t}\n\t\t\tvar url = URL.createObjectURL(file);\n\n\t\t\tif(file.type.search(\"image\") == 0){\n\n\t\t\t\tvar reader = new FileReader();\n\t\t\t    var image  = new Image();\n\n\t\t\t    reader.readAsDataURL(file);  \n\t\t\t    reader.onload = function(_file) {\n\t\t\t        image.src    = _file.target.result;              // url.createObjectURL(file);\n\t\t\t        image.onload = function() {\n\t\t\t            var w = this.width,\n\t\t\t                h = this.height,\n\t\t\t                t = file.type,                           // ext only: // file.type.split('/')[1],\n\t\t\t                n = file.name,\n\t\t\t                s = ~~(file.size/1024) +'KB';\n\n\t\t\t                ratio = w / h;\n\t\t\t                type = \"image\";\n\t\t\t                content = n;\n\t\t\t\t\t\t\t//console.log(ratio);\n\t\t\t            //$('#uploadPreview').append('<img src=\"'+ this.src +'\"> '+w+'x'+h+' '+s+' '+t+' '+n+'<br>');\n\t\t\t        };\n\t\t\t        image.onerror= function() {\n\t\t\t        \terror = 'Invalid file type.';\n\t\t\t            //alert('Invalid file type: '+ file.type);\n\t\t\t        };      \n\t\t\t    };\n\n\t\t\t}else if(file.type.search(\"video\") == 0){\n                type = \"video\";\n\t\t\t}else{\n\t\t\t\tconsole.log('Dit is geeeeeen afbeelding!!!');\n\t\t\t\terror = 'Invalid file type';\n\t\t\t}\n\t\t\t//console.log(error);\n\t\t\tvar sourceFile = url;\n\t\t\tif(error == ''){\n\t\t\t\t//console.log('ok?');\n\n\t\t\t\tvar data = new FormData();\n\t\t\t    data.append('SelectedFile', files[0]);\n\n\t\t\t    var request = new XMLHttpRequest();\n\n\t\t\t\trequest.onreadystatechange = function(){\n\t\t\t\t    if(request.readyState == 4){\n\t\t\t\t        try {\n\t\t\t\t            var resp = JSON.parse(request.response);\n\t\t\t\t        } catch (e){\n\t\t\t\t            var resp = {\n\t\t\t\t                status: 'error',\n\t\t\t\t                data: request.responseText\n\t\t\t\t            };\n\t\t\t\t        }\n\t\t\t\t        sourceFile = $($(resp.data).get(0)).val();\n\t\t\t\t        console.log(sourceFile);\n\t\t\t\t        var shape = new Shape(undefined,id);\n\t\t\t\t\t\tshape.create(200,200,200,100,'black',type,sourceFile,ratio);\n\t\t\t\t\t\tthis.selectHandler(shape);\n\t\t\t\t\t\t++id;\n\t\t\t\t\t\tshapes[id] = shape;\n\t\t\t\t        //var destFile = $($(resp.data).get(1)).val();\n\t\t\t\t        //console.log(destFile);\n\t\t\t\t    }\n\t\t\t\t}.bind(this);\n\t\t\t\trequest.open('POST', 'index.php?page=uploadFile');\n\t\t\t\trequest.send(data);\n\t\t\t}\t\t\t\n\n\t\t}\n\n\t}\n\tFlowchartApplication.prototype.deleteSelected = function(){\n\t\tif(this.selected != 0){\n\t\t\tif(this.selected.type == 'shape'){\n\t\t\t\tconsole.log(this.selected);\n\t\t\t\tshapes.splice(this.selected.id, 1);\n\t\t\t\t\n\t\t\t}else if(this.selected.type == 'line'){\n\t\t\t\tlines.splice(this.selected.id, 1);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tthis.selected.deleteMe();\n\t\t\tthis.selected = 0;\n\t\t\tconsole.log(this.selected);\n\t\t}\n\t}\n\tFlowchartApplication.prototype.changeTool = function(tool){\n\t\t//change tool\n\t\tconsole.log('tool tool tool');\n\t\tthis.tool = tool.tool.toLowerCase();\n\t\tconsole.log(this.tool);\n\t\t/*if(this.tool == 'delete'){\n\t\t\tthis.deleteSelected();\n\t\t}*/\n\t};\n\tFlowchartApplication.prototype.changeColor = function(color){\n\t\tconsole.log(color);\n\t\tswitch(color){\n\t\t\tcase 'groen':\n\t\t\tthis.shapeColor = '#bbb';\n\t\t\tbreak;\n\t\t\tcase 'geel':\n\t\t\tthis.shapeColor = '#faf05b';\n\t\t\tbreak;\n\t\t\tcase 'oranje':\n\t\t\tthis.shapeColor = '#ff7153';\n\t\t\tbreak;\n\t\t}\n\t\tif(this.selected.type == 'shape'){\n\t\t\tconsole.log('shape color');\n\t\t\tthis.selected.changeColor(this.shapeColor);\n\t\t}\n\t\t//this.shapeColor = '#bbb';\n\t}\n\tFlowchartApplication.prototype.createFlowchart = function(data){\n\t\tconsole.log(data);\n\t\tvar shapesD = data.shapes;\n\t\tfor(var i = 0; i < shapesD.length;i++){\n\t\t\t//if(shapesD[i] != undefined){\n\t\t\t\tvar shape = new Shape(undefined,id);\n\t\t\t\tshape.create(shapesD[i].x,shapesD[i].y,shapesD[i].width,shapesD[i].height,shapesD[i].color,shapesD[i].type,shapesD[i].content);\n\t\t\t\t++id;\n\t\t\t\t//this.selectHandler(shape);\n\t\t\t\tbean.on(shape,'changeSelected',this.selectHandler.bind(this));\n\t\t\t\t//shape.makeSelected();\n\t\t\t\tshapes[id] = shape;\n\t\t\t//}\n\t\t\t\n\t\t\t//shapes.push(shape);\n\t\t}\n\t\tvar linesD = data.lines;\n\t\t//var tool = new ToolEvent;\n\t\t//tool.point = [0,0];\n\t\tfor(var i = 0; i < linesD.length;i++){\n\t\t\t//if(linesD[i] != undefined){\n\t\t\t\tvar line = new Line(undefined,id);\n\t\t\t\tline.create(linesD[i].x1,linesD[i].y1,linesD[i].x2,linesD[i].y2,linesD[i].color);\n\t\t\t\t//lines.push(line);\n\t\t\t\tline.$c1.onMouseDrag = line.moveHandler.bind(line);\n\t\t\t\tline.$c2.onMouseDrag = line.moveHandler.bind(line);\n\t\t\t\tbean.on(line,'changeSelected',this.selectHandler.bind(this));\n\t\t\t\t//line.makeSelected();\n\t\t\t\t//this.selectHandler(line);\n\t\t\t\tlines[id] = line;\n\t\t\t\t++id;\n\t\t\t//}\n\t\t}\n\t\tview.update();\n\t\t\n\n\n\t}\n\tFlowchartApplication.prototype.selectHandler = function(obj){\n\t\tif(this.selected != 0){\n\t\t\tvar currSelected = this.selected;\n\t\t\tcurrSelected.removeSelected();\n\t\t}\n\t\tthis.selected = obj;\n\t\tobj.makeSelected();\n\t}\n\tFlowchartApplication.prototype.hoverHandler = function(e){\n\t\tif(project.hitTest(e.point) != null && this.tool == 'line'){\n\t\t\t$('canvas').css('cursor','move');\t\n\t\t}else{\n\t\t\t$('canvas').css('cursor','copy');\n\t\t}\n\t}\n\tFlowchartApplication.prototype.clickHandler = function(e){\n\t\t//console.log(this);\n\t\tswitch(this.tool){\n\t\t\tcase 'select':\n\t\t\tbreak;\n\t\t\tcase 'shape':\n\t\t\t\tconsole.log('click');\n\t\t\t\tvar shape = new Shape(e,id);\n\t\t\t\tshape.changeColor(this.shapeColor); \n\t\t\t\tshapes[id] = shape;\n\t\t\t\t++id;\n\t\t\t\tthis.selectHandler(shape);\n\t\t\t\tbean.on(shape,'changeSelected',this.selectHandler.bind(this));\n\t\t\tbreak;\n\t\t\tcase 'line':\n\t\t\t\tif(project.hitTest(e.point) == null){\n\t\t\t\t\t//$('canvas').css('cursor','copy');\t\n\t\t\t\t\t//create lines with canvas\n\t\t\t\t\tif(!creatingLine){\n\t\t\t\t\t\tconsole.log('first create Line');\n\t\t\t\t\t\t//point = [e.offsetX,e.offsetY]\n\t\t\t\t\t\tvar line = new Line(e,id);\n\t\t\t\t\t\t++id;\n\t\t\t\t\t\tlines[id] = line;\n\t\t\t\t\t\t\n\t\t\t\t\t\t//lines.push(line);\n\t\t\t\t\t\tline.$c1.onMouseDrag = line.moveHandler.bind(line);\n\n\t\t\t\t\t}else{\n\t\t\t\t\t\tconsole.log('second create Line');\n\t\t\t\t\t\tvar line = lines[id];\n\t\t\t\t\t\tline.addCircle(e);\n\t\t\t\t\t\tline.$c2.onMouseDrag = line.moveHandler.bind(line);\n\t\t\t\t\t\tthis.selectHandler(line);\n\t\t\t\t\t\tbean.on(line,'changeSelected',this.selectHandler.bind(this));\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(lines);\n\t\t\t\t\tcreatingLine = !creatingLine;\n\t\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'file':\n\t\t\tbreak;\n\t\t\tcase 'delete':\n\t\t\tbreak;\n\t\t}\n\t\t\n\t};\n\t\n\tFlowchartApplication.prototype.save = function(event){\n\t\tevent.preventDefault();\n\t\t//data doorsturen via eigen post\n\t\t//eigen var aanmaken, object dus {}\n\t\tvar $shapes2 = [];\n\t\tfor(var i =0;i<=id;i++){\n\t\t//$(shapes).each(function(id,shape){\n\t\t\tif(shapes[i] != undefined){\n\t\t\t\tvar type = shapes[i].input.value;\n\t\t\t\tconsole.log(shapes[i].inputType);\n\t\t\t\tif(shapes[i].inputType != 'text'){\n\t\t\t\t\tvar type = shapes[i].input.src;\n\t\t\t\t}\n\t\t\t\t$shapes2.push(\n\t\t\t\t\t{\n\t\t\t\t\t\t'x':parseInt(shapes[i].$el.css('left')),\n\t\t\t\t\t\t'y':parseInt(shapes[i].$el.css('top')),\n\t\t\t\t\t\t'width':parseInt(shapes[i].$el.css('width')),\n\t\t\t\t\t\t'height':parseInt(shapes[i].$el.css('height')),\n\t\t\t\t\t\t'type': shapes[i].inputType,\n\t\t\t\t\t\t'content':type,\n\t\t\t\t\t\t'color':shapes[i].shapeColor\n\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tvar $lines2 = [];\n\t\tfor(var j =0;j <= id+1;j++){\n\t\t\tif(lines[j] != undefined){\n\t\t\t\t$lines2.push(\n\t\t\t\t\t{\n\t\t\t\t\t\t'x1':lines[j].x1,\n\t\t\t\t\t\t'y1':lines[j].y1,\n\t\t\t\t\t\t'x2':lines[j].x2,\n\t\t\t\t\t\t'y2':lines[j].y2,\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconsole.log($shapes2);\n\t\tconsole.log($lines2);\n\t\tvar flowchartId = \"\";\n\t\tif(getParameterByName('id') != null){\n\t\t\tflowchartId = getParameterByName('id');\n\t\t}\n\t\tvar groupId = \"\";\n\t\tif(getParameterByName('groupid') != null){\n\t\t\tgroupId = getParameterByName('groupid');\n\t\t}\n\n\t\tvar dataFlowchart = {\n\t\t\t'id': flowchartId,\n\t\t\t'groupId' : groupId,\n\t\t\t'name': $(\"#viewerchanger\").val(),\n\t\t\t'shapes': $shapes2,\n\t\t\t'lines': $lines2\n\t\t};\n\t\t//TODO: error handling met .error: meegeven aan user dmv evt window alert?\n\t\t$.post('index.php?page=saveFlowchart',dataFlowchart)\n\t\t.success(function(data){\n\t\t\t//console.log('flowchartId = ' + flowchartId);\n\t\t\tconsole.log('posted');\n\t\t\t//location.reload();\n\t\t});\n\t\t\n\t\t//console.log('Save it yo');\n\t};\n\tfunction getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n\t}\n\treturn FlowchartApplication;\n})();","module.exports = (function(){\n\t\n\tfunction Line(event,id) {\n\t\t//var tool = new Tool();\n\t\tthis.type = 'line';\n\t\tthis.id = id;\n\t\tthis.x1 = 0;\n\t\tthis.y1 = 0;\n\t\tif(event != undefined){\n\t\t\tthis.x1 = event.point.x;\n\t\t\tthis.y1 = event.point.y;\n\n\t\t}\n\t\t//create first circle, this.c1 & this.c2\n\t\tconsole.log('creating first circle');\n\t\n\t\tthis.$c1 = new Shape.Circle([this.x1,this.y1], 5);\n\t\tthis.$c1.fillColor = 'black';\n\n\t\t//this.$el;\n\t\t//console.log(this.$c1);\n\t\t//$('canvas').append(this.$c1);\n\n\t}\n\tLine.prototype.makeSelected = function(){\n\t\tthis.selectBox = new Shape.Rectangle(this.$c1.position,this.$c2.position);\n\t\tthis.selectBox.style = {\n\t\t\tstrokeColor: 'rgba(0,0,0,.3)',\n\t\t    dashArray: [1, 2],\n\t\t    strokeWidth: 1,\n\t\t    opacity: .1\n\t\t}\n\t\t//bean.fire(this,'changeSelected',this);\n\t};\n\tLine.prototype.removeSelected = function(){\n\t\tthis.selectBox.remove();\n\t\tview.update();\n\t}\n\tLine.prototype.deleteMe = function(){\n\t\tif(!this.$c2.isEmpty()){this.$c2.remove();}\n\t\tif(!this.$c1.isEmpty()){this.$c1.remove();}\n\t\tif(!this.$line.isEmpty()){this.$line.remove();}\n\t\tif(!this.selectBox.isEmpty()){this.selectBox.remove();}\n\t\tview.update();\n\t}\n\tLine.prototype.create = function(x1,y1,x2,y2,color) {\n\n\t\tconsole.log('creating first circle');\n\t\tthis.x1 = x1;\n\t\tthis.y1 = y1;\n\t\tthis.x2 = x2;\n\t\tthis.y2 = y2;\n\t\tthis.$c2 = new Shape.Circle([x2,y2], 5);\n\t\tthis.$c1.position = [x1,y1];\n\t\tthis.$c2.position = [x2,y2];\n\t\tthis.$line = new Path.Line(this.$c1.position,this.$c2.position);\n\t\tthis.$line.strokeColor = 'black';\n\t\tthis.$line.strokeWidth = 2;\n\t\tthis.$c1.fillColor = 'black';\n\t\tthis.$c2.fillColor = 'black';\n\n\t};\n\tLine.prototype.addCircle = function(event){\n\t\t//add 2nd circle\n\t\t\n\t\tthis.$c2 = new Shape.Circle(event.point, 5);\n\t\tthis.$c2.fillColor = 'black';\n\t\tthis.x2 = event.point.x;\n\t\tthis.y2 = event.point.y;\n\n\t\t//draw line between the two circles\n\t\tthis.$line = new Path.Line([this.x1,this.y1], [this.x2,this.y2]);\n\t\tthis.$line.strokeColor = 'black';\n\t\tthis.$line.strokeWidth = 2;\n\t\t//console.log(this);\n\n\n\n\t\t//$('canvas').append(this.$c2);\n\t\t//$('canvas').append(this.$line);\n\t\t//save input value\n\t\t//this.text = this.value;\n\t};\n\tLine.prototype.hoverHandler = function(e){\n\t\t//show move and scale tool\n\n\t\t//add click listener for move and scale thingy.\n\n\n\t};\n\tLine.prototype.moveHandler = function(e){\n\t\t//e.stopPropagation();\n\t\tconsole.log('draggin');\n\t\t//console.log(this);\n\t\t//console.log(e.target);\n\t\tif(e.target == this.$c1){\n\t\t\t//console.log(this.$c2.position);\n\t\t\tthis.$line.remove();\n\t\t\tthis.$line = new Path.Line(e.point,this.$c2.position);\n\t\t}else if(e.target == this.$c2){\n\t\t\tthis.$line.remove();\n\t\t\tthis.$line = new Path.Line(this.$c1.position,e.point);\n\t\t}\n\t\tthis.$line.strokeColor = 'black';\n\t\tthis.$line.strokeWidth = 2;\n\t\te.target.position = e.point;\n\t\tbean.fire(this,'changeSelected',this);\n\t\tthis.selectBox.remove();\n\t\tthis.selectBox = new Shape.Rectangle(this.$c1.position,this.$c2.position);\n\t\tthis.selectBox.style = {\n\t\t\tstrokeColor: 'rgba(0,0,0,.3)',\n\t\t    dashArray: [1, 2],\n\t\t    strokeWidth: 1,\n\t\t    opacity: .1\n\t\t}\n\t\t//this.position = e.point;\n\t\t\t//is currentTarget c1 or c2?\n\n\t\t//event handler for mouseMove\n\n\t\t//move to new position\n\t\t//if currentTarget c1:\t\n\t\t//this.x1 = offset.x;\n\t\t//this.y1 = offset.y;\t\n\t\t//else if currentTarget c2:\n\t\t//this.x2 = offset.x;\n\t\t//this.y2 = offset.y;\t\n\n\t\t//update line?\n\t};\n\t\n\treturn Line;\n})();","module.exports = (function(){\n\tvar size = [];\n\t//var clicks = 0;\n\n\n\tfunction Shape(event, id) {\n\t\tconsole.log('creating shape');\n\t\tthis.x = 100;\n\t\tthis.y = 50;\n\t\tif(event != undefined){\n\t\t\tthis.x = event.offsetX;\n\t\t\tthis.y = event.offsetY;\n\t\t}\n\t\tthis.type = 'shape';\n\t\tthis.id = id;\n\t\tthis.shapeColor = '#ddd';\n\t\tthis.$el = $(document.createElement('div'));\n\t\tthis.$el.css('top',this.y - 50 + 'px');\n\t\tthis.$el.css('left',this.x - 100 + 'px');\n\t\tthis.$el.addClass('shape');\n\t\tthis.$el.addClass('draggable');\n\n\t\tthis.input = document.createElement('textarea');\n\t\tthis.inputType = 'text';\n\t\tthis.$el.css('value', this.text);\n\t\tthis.$el.append(this.input);\n\t\t//save input value\n\t\tthis.text = this.value;\n\t\t\n\t\t\n\n\t\tthis.$resizeBox = $(document.createElement('div'));\n\t\tthis.$resizeBox.addClass('resizable');\n\t\t//this.$resizeBox.css('top','50px');\n\t\t//this.$resizeBox.css('left','150px');\n\n\t\tthis.$el.append(this.$resizeBox);\n\n\t\t$('.app').append(this.$el);\n\t\t$('.shape').click(function(e) {\n\t\t\te.stopPropagation();\n\t\t});\n\n\t\t\n\n\t\tthis._mMoveHandler = this.mMoveHandler.bind(this);\n\t\tthis._mUpHandler = this.mUpHandler.bind(this);\n\t\tthis._mDownHandler = this.mDownHandler.bind(this);\n\n\t\tthis.$el.mousedown(this._mDownHandler);\n\n\t\tthis._rMoveHandler = this.rMoveHandler.bind(this);\n\t\tthis._rUpHandler = this.rUpHandler.bind(this);\n\t\tthis._rDownHandler = this.rDownHandler.bind(this);\n\n\t\tthis.$resizeBox.mousedown(this._rDownHandler);\n\n\t\tthis.clicks = 0;\n\t\t\n\t\t\n\t\t\n\n\t}\n\tShape.prototype.create = function(x,y,width,height,color,type,content,ratio) {\n\t\tconsole.log('recreating shapes');\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.$el.css('top',y + 'px');\n\t\tthis.$el.css('left',x +'px');\n\t\tthis.$el.css('width',width);\n\t\tthis.$el.css('height',height);\n\t\tthis.inputType = 'text';\n\t\tthis.shapeColor = color;\n\t\tthis.$el.css('background-color',color);\n\t\t//console.log(ratio);\n\t\tif(ratio == undefined){\n\t\t\tratio = width/height;\n\t\t}\n\t\t\n\t\tswitch(type){\n\t\t\tcase 'image':\n\t\t\t\tthis.input.remove();\n\t\t\t\tthis.input = document.createElement('img');\n\t\t\t\tthis.inputType = type;\n\t\t\t\tthis.input.style.width = '200px';\n\t\t\t\t//console.log(ratio);\n\t\t\t\tthis.input.style.height = 200 * ratio + 'px';\n\t\t\t\tthis.$el.css('height',200 * ratio + 'px');\n\t\t\t\tthis.input.src = content;\n\t\t\t\tthis.$el.prepend(this.input);\n\t\t\tbreak;\n\t\t\tcase 'video':\n\t\t\t\tthis.input.remove();\n\t\t\t\tthis.input = document.createElement('video');\n\t\t\t\tthis.input.style.width = '200px';\n\t\t\t\tthis.input.style.height = '113px';\n\n\t\t\t\tthis.$el.css('height','113px');\n\t\t\t\tthis.inputType = type;\n\t\t\t\tthis.input.src = content;\n\t\t\t\tconsole.log($('video').innerHeight());\n\t\t\t\tthis.$el.prepend(this.input);\n\t\t\t\t//this.input.play();\n\t\t\tbreak;\n\t\t\tcase 'text':\n\t\t\t\t//this.input = document.createElement('textarea');\n\t\t\t\tthis.input.innerText = content;\n\t\t\tbreak;\n\t\t}\n\t\t//this.$el.css('value', this.text);\n\t\t//this.$el.append(this.input);\n\t\t//save input value\n\t\t\n\n\t};\n\tShape.prototype.rDownHandler = function(event){\n\n\t\tthis.removeSelected();\n\t\tthis.makeSelected();\n\t\t\n\t\t//console.log('down on the scaler');\n\t\tthis.offsetX = event.pageX;\n\t\tthis.offsetY = event.pageY;\n\n\t\tthis.width = parseInt(this.$el.css('width'));\n\t\tthis.height = parseInt(this.$el.css('height'));\n\t\twindow.addEventListener('mousemove',this._rMoveHandler);\n\t\twindow.addEventListener('mouseup',this._rUpHandler);\n\t\tevent.stopPropagation();\t\t\n\t};\n\tShape.prototype.rMoveHandler = function(event){\n\n\t\twidth = event.pageX - this.offsetX;\n\t\tthis.$el.css('width',this.width + width + 'px');\n\t\theight = event.pageY - this.offsetY;\n\t\tthis.$el.css('height',this.height + height + 'px');\n\t\tthis.$resizeBox.css('right',-parseInt(this.$el.css('width')) + 7 + 'px');\n\t\t\n\t};\n\tShape.prototype.rUpHandler = function(event){\n\t\twindow.removeEventListener('mousemove',this._rMoveHandler);\n\t\twindow.removeEventListener('mouseup',this._rUpHandler);\n\n\t};\n\tShape.prototype.mDownHandler = function(event){\n\t\tbean.fire(this,'changeSelected',this);\n\t\t//this.removeSelected();\n\t\t//this.makeSelected();\n\t\t//console.log(this)\n\t\t//console.log('down on the mover');\n\t\tthis.offsetX = event.pageX;\n\t\tthis.offsetY = event.pageY;\n\t\tthis.left = parseInt(this.$el.css('left'));\n\t\tthis.top = parseInt(this.$el.css('top'));\n\t\tthis.clicks++;\n\t\tthis.$el.css('z-index', this.clicks);\n\t\twindow.addEventListener('mousemove',this._mMoveHandler);\n\t\twindow.addEventListener('mouseup',this._mUpHandler);\n\t\t\t\t\n\t};\n\tShape.prototype.mMoveHandler = function(event){\n\t\t//console.log(parseInt(this.$el.css(\"width\")));\n\t\tthis.x = event.pageX - this.offsetX + this.left;\n\t\tthis.$el.css('left',this.x + 'px');\n\t\tthis.y = event.pageY - this.offsetY + this.top;\n\t\tthis.$el.css('top',this.y + 'px');\n\t\t\n\t};\n\tShape.prototype.mUpHandler = function(event){\n\t\twindow.removeEventListener('mousemove',this._mMoveHandler);\n\t\twindow.removeEventListener('mouseup',this._mUpHandler);\n\t\t//console.log('up');\n\t};\n\tShape.prototype.makeSelected = function(){\n\t\tthis.$el.addClass('selected');\n\t\t//bean.fire(this,'changeSelected',this);\n\t}\n\tShape.prototype.changeColor = function(color){\n\t\tconsole.log('at shape to change color');\n\t\tthis.shapeColor = color;\n\t\tthis.$el.css('background-color',color);\n\n\t\t//bean.fire(this,'changeSelected',this);\n\t}\n\tShape.prototype.removeSelected = function(){\n\t\tif($('.selected').length != 0){\n\t\t\t$('.selected').removeClass('selected');\n\t\t}\n\t}\n\tShape.prototype.deleteMe = function(){\n\t\tthis.$el.remove();\n\t}\n\t\n\t/*Shape.prototype.changeSize = function(event){\n\t\tthis.$el.css('width',event.offsetX);\n\t\tthis.$el.css('height',event.offsetY);\n\n\t};*/\n\tShape.prototype.addText = function(){\n\t\t//add event listener for when input loses focus:\n\t\t\n\t};\n\tShape.prototype.hoverHandler = function(e){\n\t\t//show move and scale tool\n\n\t\t//add click listener for move and scale thingy.\n\n\n\t};\n\tShape.prototype.moveHandler = function(e){\n\t\t//event handler for mouseMove\n\t\tconsole.log(this);\n\t\t//move to new position\t\n\t\tthis.x = offset.x;\n\t\tthis.y = offset.y;\t\n\t\t//update shape?\n\t\tthis.$el.css('top',this.y + 'px');\n\t\tthis.$el.css('left',this.x +'px');\n\n\t};\n\tShape.prototype.scaleHandler = function(e){\n\t\t//event handler for mouseMove\n\t\t//scale to new position\n\t\tthis.width = offset.x;\n\t\tthis.height = offset.y;\t\n\n\t\t//update shape?\t\n\t};\n\t/* //example function\n\tShape.prototype.removeHandler = function(){\n\t\tconsole.log('trying to delete the mutherfucker');\n\t\tbean.fire(this, 'remove', this);\n\t}; */\n\t\n\treturn Shape;\n})();","module.exports = (function(){\n\n\tvar shapeTool = true;\n\tfunction Toolbar($el) {\n\n\t\t//bean.fire(this, 'remove', this);\n\t\t//bean.fire(this,'create-item',this.input.value);\n\t\t//make 2 buttons\n\t\t//handlebars gebruiken maar is overkill momenteel. :)\n\n\t\tthis.$elToolbar = $('<div class=\"toolbar\" value=\"Shape Tool\">');\n\t\tthis.$elShape = $('<input type=\"button\" class=\"button2\" id=\"Shape\"/>');\n\t\tthis.$elLine = $('<input type=\"button\" class=\"button2\" id=\"Line\"/>');\n\t\tthis.$elFile = $('<form id=\"uploadWrapper\" enctype=\"multipart/form-data\" action=\"index.php?page=uploadFile\"><input type=\"file\" class=\"button2\" id=\"File\"/></div>');\n\t\tthis.$elDelete = $('<a class=\"button2\" id=\"Delete\"/>');\n\n\t\tthis.$elColor = $('<div class=\"changeColor\">');\n\t\tthis.$elColorUl = $('<ul class=\"dropdown\">');\n\t\tthis.$elColorOptions = \n\t\t$('<li><div id=\"groen\"></li>' + '<li><div id=\"geel\"></li>' + '<li><div id=\"oranje\"></li>');\n\t\t\n\t\t/*this.$elSize = $('<div class=\"changeSize\">');\n\t\tthis.$elSizeUl = $('<ul class=\"dropdown\">');\n\t\tthis.$elSizeOptions = $('<a href=\"#\"><li>S</li></a>' + '<a href=\"#\"><li>M</li></a>' + '<a href=\"#\"><li>L</li></a>');\n\n\t\tthis.$elAlign = $('<div class=\"changeAlign\">');\n\t\tthis.$elAlignUl = $('<ul class=\"dropdown\">');\n\t\tthis.$elAlignOptions = $('<li><div id=\"left\"></li>' + '<li><div id=\"right\"></li>' + '<li><div id=\"center\"></li>');\n\t\t*/\n\t\tthis.$elColorUl.append(this.$elColorOptions);\n\t\tthis.$elColor.append(this.$elColorUl);\n\n\t\t/*this.$elSizeUl.append(this.$elSizeOptions);\n\t\tthis.$elSize.append(this.$elSizeUl);\n\n\t\tthis.$elAlignUl.append(this.$elAlignOptions);\n\t\tthis.$elAlign.append(this.$elAlignUl);\n\t\t*/\n\n\t\tthis.$elToolbar.append(this.$elSelect, this.$elShape, this.$elLine, this.$elFile, this.$elDelete, this.$elColor/*, this.$elSize, this.$elAlign*/);\n\t\t\n\t\t$el.parent().prepend(this.$elToolbar);\n\n\t\t//this.$elShape.click(this.changeTool);\n\t\t//this.$elDelete.click(this.changeTool);\n\t\t//addEventListener for button: changeTool\n\t\t//bean.on($('.toolbar input'), 'click', this.changeTool);\n\t\t//$('.toolbar input').click(this.changeTool.bind(this));\t\t\t\n\t\t//this.$elToolbar.click(this.changeTool);\n\t\t//addEventListener for button: changeTool\n\n\t\t$('.changeColor div').click(this.changeColor.bind(this));\n\t\t//$('.changeSize div').click(this.changeSize);\n\t\t//$('.changeAlign div').click(this.changeAlign);\n\t\t//this.$elAlign.click(this.dropTool);\t\t\t\n\t\t//this.$elSize.click(this.dropTool);\t\t\t\n\t\tthis.$elColor.click(this.dropTool);\t\t\t\n\t\t$('.toolbar input[type=\"button\"]').click(this.changeTool.bind(this));\t\n\t\tthis.$elDelete.click(this.deleteTool.bind(this));\n\t\t$('#File').change(function(){\n\t\t\tbean.fire(this, 'uploadFile', event.target.files);\n\t\t}.bind(this));\n\n\t\tthis.$elShape.css('background', \"url('images/shape_hover.jpg')\");\t\t\t\n\t}\n\tToolbar.prototype.deleteTool = function(e){\n\t\tbean.fire(this, 'delete', this);\n\t}\n\tToolbar.prototype.fileTool = function(e){\n\t\tbean.fire(this, 'delete', this);\n\t}\n\tToolbar.prototype.changeColor = function(e){\n\t\tconsole.log('changing color to '+e.currentTarget.getAttribute('id'));\n\t\tbean.fire(this, 'color', e.currentTarget.getAttribute('id'));\n\t}\n\t/*Toolbar.prototype.changeSize = function(e){\n\t\tbean.fire(this, 'size', e.currentTarget.innerText());\n\t}\n\tToolbar.prototype.changeAlign = function(e){\n\t\tbean.fire(this, 'align', e.currentTarget.getAttribute('id'));\n\t}*/\n\tToolbar.prototype.changeTool = function(e){\n\t\te.stopPropagation();\n\t\tconsole.log('clicking '+e.currentTarget.getAttribute('id') + ' button');\n\t\tthis.tool = e.currentTarget.getAttribute('id').toLowerCase();\n\t\tswitch(this.tool){\n\t\t\tcase 'line':\n\t\t\t\tthis.$elLine.css('background', \"url('images/line_hover.jpg')\");\n\t\t\t\tthis.$elShape.css('background', \"url('images/shape.jpg')\");\n\t\t\t\t$('canvas').css('pointer-events', 'auto');\n\t\t\tbreak;\n\t\t\tcase 'shape':\n\t\t\t\t$('canvas').css('pointer-events', 'none');\n\t\t\t\tthis.$elLine.css('background', \"url('images/line.jpg')\");\n\t\t\t\tthis.$elShape.css('background', \"url('images/shape_hover.jpg')\");\n\t\t\tbreak;\n\t\t\tcase 'file':\n\t\t\t\t$('canvas').css('pointer-events', 'none');\n\t\t\t\tthis.$elLine.css('background', \"url('images/line.jpg')\");\n\t\t\t\tthis.$elShape.css('background', \"url('images/shape_hover.jpg')\");\n\t\t\tbreak;\n\t\t}\n\t\tbean.fire(this, 'changeTool', this);\n\t\t\n\t};\n\n\tToolbar.prototype.dropTool = function(e){\n\t\tthis.drop = e.currentTarget.querySelector('ul').classList.toggle('open');\n\t}\n\t\n\treturn Toolbar;\n})();"]}