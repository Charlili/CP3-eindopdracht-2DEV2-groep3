{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/src/script.js","js/src/classes/FlowchartApplication.js","js/src/classes/Line.js","js/src/classes/Shape.js","js/src/classes/Toolbar.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.dist.js","sourceRoot":"../","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(){\n\tconsole.log('Goed bezig Charlotte.');\n\n\t//\n\tfunction init() {\n\t\tconsole.log('test');\n\t\tif(getParameterByName('page') != null && (getParameterByName('page') === 'overview' || getParameterByName('page') === 'group')){\n\t\t\tconsole.log('Time to make apps');\n\t\t\tvar FlowchartApplication = require('./classes/FlowchartApplication.js');\n\t\t\tvar flowchartApplication = new FlowchartApplication($('.app'));\n\t\t}\n\t\t//console.log(getParameterByName('page'));\n\t\t//login klik\n\t\tif(getParameterByName('page') == '' || getParameterByName('page') === 'home' ){\n\t\t\tvar login = document.querySelector('.login');\n\t\t\tlogin.addEventListener('click',clickHandlerLogin);\n\t\t}\n\n\t\tif(getParameterByName('page') == '' || getParameterByName('page') === 'listgroups' ){\n\t\t\tvar addgroup = document.querySelector('.addgroup');\n\t\t\taddgroup.addEventListener('click',clickHandlerAddgroup);\n\t\t\tvar myform = document.getElementById('myform');\n\n\t\t\t// $(document).ready(function(){\n\t\t\t// \t$('#mySelect').change(function(){\n\t\t\t// \t\t$(this).val();\n\t\t\t// \t\tmyform.submit();\n\t\t\t// \t});\n\t\t\t// });\n\t\t}\n\n\t\tif(getParameterByName('page') == '' || getParameterByName('page') === 'add' || getParameterByName('page') === 'overview'  ){\n\t\t\t//title live change\n\t\t\t$('#viewerchanger').keyup(function(){\n\t\t\t\tvar str = $(this).val();\n\t\t\t\t$(\"#viewer\").text(str);\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\tfunction clickHandlerLogin(){\n\t\tevent.preventDefault();\n\t\tconsole.log(this);\n\t\tvar loginform = document.querySelector('.hidden');\n\t\tloginform.classList.toggle('closed');\n\t}\n\n\tfunction clickHandlerAddgroup(){\n\t\tevent.preventDefault();\n\t\tvar searchgroup = document.querySelector('.searchgroup');\n\t\tsearchgroup.classList.toggle('test');\n\t}\n\n\tinit();\n\n\t//function to get $_GET values\n\tfunction getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n\t}\n})();","module.exports = (function(){\n\n\tvar Toolbar = require('./Toolbar.js');\n\tvar Shape = require('./Shape.js');\n\tvar Line = require('./Line.js');\n\n\tvar shapes = [];\n\tvar lines = [];\n\tvar tempArray = [];\n\tvar creatingLine = false;\n\tvar point = [];\n\n\tpaper.install(window);\n\tpaper.setup('cnvs');\n\n\t\n\tfunction FlowchartApplication($el) {\n\t\tvar tool = new Tool();\n\t\tconsole.log('Making app....');\n\n\t\tthis.$el = $el;\n\t\tthis.tool = 'shape';\n\t\tthis.toolbar = new Toolbar($el);\n\n\t\tvar shape;\n\t\tthis.$el.click(this.clickHandler);\n\t\ttool.onMouseDown = this.clickHandler;\n\n\t\t$('.save-flowchart').click(this.save);\n\t\tif(getParameterByName('id') != ''){\n\t\t\t$.get('index.php?page=loadFlowchart&id='+getParameterByName('id'),function(data){\n\t\t\t\tthis.createFlowchart(data);\n\t\t\t}.bind(this));\t\n\t\t}\n\t\t\n\n\t}\n\tFlowchartApplication.prototype.createFlowchart = function(data){\n\t\tconsole.log(data);\n\t\tvar shapes = data.shapes;\n\t\tfor(var i = 0; i < shapes.length;i++){\n\t\t\tvar shape = new Shape();\n\t\t\tshape.create(shapes[i].x,shapes[i].y,shapes[i].width,shapes[i].height,shapes[i].color,shapes[i].type,shapes[i].content);\n\t\t\t//shapes.push(shape);\n\t\t}\n\t\tvar lines = data.lines;\n\t\tvar tool = new ToolEvent;\n\t\ttool.point = [0,0];\n\t\tfor(var i = 0; i < lines.length;i++){\n\n\t\t\tvar line = new Line();\n\t\t\tline.create(lines[i].x1,lines[i].y1,lines[i].x2,lines[i].y2,lines[i].color);\n\t\t\t//lines.push(line);\n\t\t\tline.$c1.onMouseDrag = line.moveHandler.bind(line);\n\t\t\tline.$c2.onMouseDrag = line.moveHandler.bind(line);\n\t\t}\n\t\t\n\n\n\t}\n\tFlowchartApplication.prototype.clickHandler = function(e){\n\t\t//will replace this with bean event later\n\t\tif($('.button').attr('value') == 'Shape Tool'){\n\t\t\tconsole.log('click');\n\t\t\tvar shape = new Shape(e); \n\t\t\tshapes.push(shape);\n\n\t\t}else{\n\t\t\tif(project.hitTest(e.point) == null){\t\n\t\t\t\t//create lines with canvas\n\t\t\t\tif(!creatingLine){\n\t\t\t\t\tconsole.log('first create Line');\n\t\t\t\t\t//point = [e.offsetX,e.offsetY]\n\t\t\t\t\tvar line = new Line(e);\n\t\t\t\t\tlines.push(line);\n\t\t\t\t\tline.$c1.onMouseDrag = line.moveHandler.bind(line);\n\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log('second create Line');\n\t\t\t\t\tvar line = lines[lines.length-1];\n\t\t\t\t\tline.addCircle(e);\n\t\t\t\t\tline.$c2.onMouseDrag = line.moveHandler.bind(line);\n\t\t\t\t}\n\t\t\t\tconsole.log(lines);\n\t\t\t\tcreatingLine = !creatingLine;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//make Shape or Line, depending on this.tool\n\t\t//while get x,y coordinates from release click\n\t};\n\t\n\tFlowchartApplication.prototype.save = function(event){\n\t\tevent.preventDefault();\n\t\t//data doorsturen via eigen post\n\t\t//eigen var aanmaken, object dus {}\n\t\tvar $shapes2 = [];\n\t\t$(shapes).each(function(id,shape){\n\t\t\t$shapes2.push(\n\t\t\t\t{\n\t\t\t\t\t'x':shape.input.parentNode.style.left,\n\t\t\t\t\t'y':shape.input.parentNode.style.top,\n\t\t\t\t\t'width':shape.input.parentNode.style.width,\n\t\t\t\t\t'height':shape.input.parentNode.style.height,\n\t\t\t\t\t'type':'text',\n\t\t\t\t\t'content':shape.input.value\n\n\t\t\t\t});\n\t\t});\n\t\t\n\t\tvar $lines2 = [];\n\t\t$(lines).each(function(id,line){\n\t\t\t$lines2.push(\n\t\t\t\t{\n\t\t\t\t\t'x1':line.x1,\n\t\t\t\t\t'y1':line.y1,\n\t\t\t\t\t'x2':line.x2,\n\t\t\t\t\t'y2':line.y2,\n\t\t\t\t});\n\t\t});\n\t\t\n\t\tvar dataFlowchart = {\n\t\t\t'name': $(\"#viewerchanger\").val(),\n\t\t\t'shapes': $shapes2,\n\t\t\t'lines': $lines2\n\t\t};\n\t\t//TODO: error handling met .error: meegeven aan user dmv evt window alert?\n\t\t$.post('index.php?page=saveFlowchart',dataFlowchart)\n\t\t.success(function(data){\n\t\t\tconsole.log('posted');\n\t\t});\n\t\t\n\t\tconsole.log('Save it yo');\n};\n\tFlowchartApplication.prototype.changeTool = function(tool){\n\t\t//change tool\n\t\t//this.tool = tool;\n\t};\n\tfunction getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\treturn FlowchartApplication;\n})();","module.exports = (function(){\n\t\n\tfunction Line(event) {\n\t\t//var tool = new Tool();\n\t\tthis.x1 = 0;\n\t\tthis.y1 = 0;\n\t\tif(event != undefined){\n\t\t\tthis.x1 = event.point.x;\n\t\t\tthis.y1 = event.point.y;\n\n\t\t}\n\t\t//create first circle, this.c1 & this.c2\n\t\tconsole.log('creating first circle');\n\t\n\t\tthis.$c1 = new Shape.Circle([this.x1,this.y1], 5);\n\t\tthis.$c1.fillColor = 'black';\n\n\t\t\n\t\t//console.log(this.$c1);\n\t\t//$('canvas').append(this.$c1);\n\n\t}\n\tLine.prototype.create = function(x1,y1,x2,y2,color) {\n\n\t\tconsole.log('creating first circle');\n\t\tthis.x1 = x1;\n\t\tthis.y1 = y1;\n\t\tthis.x2 = x2;\n\t\tthis.y2 = y2;\n\t\tthis.$c2 = new Shape.Circle([x2,y2], 5);\n\t\tthis.$c1.position = [x1,y1];\n\t\tthis.$c2.position = [x2,y2];\n\t\tthis.$line = new Path.Line(this.$c1.position,this.$c2.position);\n\t\tthis.$line.strokeColor = 'black';\n\t\tthis.$line.strokeWidth = 2;\n\t\tthis.$c1.fillColor = 'black';\n\t\tthis.$c2.fillColor = 'black';\n\n\t};\n\tLine.prototype.addCircle = function(event){\n\t\t//add 2nd circle\n\t\t\n\t\tthis.$c2 = new Shape.Circle(event.point, 5);\n\t\tthis.$c2.fillColor = 'black';\n\t\tthis.x2 = event.point.x;\n\t\tthis.y2 = event.point.y;\n\n\t\t//draw line between the two circles\n\t\tthis.$line = new Path.Line([this.x1,this.y1], [this.x2,this.y2]);\n\t\tthis.$line.strokeColor = 'black';\n\t\tthis.$line.strokeWidth = 2;\n\t\t//console.log(this);\n\n\n\n\t\t//$('canvas').append(this.$c2);\n\t\t//$('canvas').append(this.$line);\n\t\t//save input value\n\t\t//this.text = this.value;\n\t};\n\tLine.prototype.hoverHandler = function(e){\n\t\t//show move and scale tool\n\n\t\t//add click listener for move and scale thingy.\n\n\n\t};\n\tLine.prototype.moveHandler = function(e){\n\t\t//e.stopPropagation();\n\t\tconsole.log('draggin');\n\t\t//console.log(this);\n\t\t//console.log(e.target);\n\t\tif(e.target == this.$c1){\n\t\t\t//console.log(this.$c2.position);\n\t\t\tthis.$line.remove();\n\t\t\tthis.$line = new Path.Line(e.point,this.$c2.position);\n\t\t}else if(e.target == this.$c2){\n\t\t\tthis.$line.remove();\n\t\t\tthis.$line = new Path.Line(this.$c1.position,e.point);\n\t\t}\n\t\tthis.$line.strokeColor = 'black';\n\t\tthis.$line.strokeWidth = 2;\n\t\te.target.position = e.point;\n\t\t//this.position = e.point;\n\t\t\t//is currentTarget c1 or c2?\n\n\t\t//event handler for mouseMove\n\n\t\t//move to new position\n\t\t//if currentTarget c1:\t\n\t\t//this.x1 = offset.x;\n\t\t//this.y1 = offset.y;\t\n\t\t//else if currentTarget c2:\n\t\t//this.x2 = offset.x;\n\t\t//this.y2 = offset.y;\t\n\n\t\t//update line?\n\t};\n\t\n\treturn Line;\n})();","module.exports = (function(){\n\tvar size = [];\n\n\n\tfunction Shape(event) {\n\t\tconsole.log('creating shape');\n\t\tthis.x = 100;\n\t\tthis.y = 50;\n\t\tif(event != undefined){\n\t\t\tthis.x = event.offsetX;\n\t\t\tthis.y = event.offsetY;\n\t\t}\n\t\tthis.$el = $(document.createElement('div'));\n\t\tthis.$el.css('top',this.y - 50 + 'px');\n\t\tthis.$el.css('left',this.x - 100 + 'px');\n\t\tthis.$el.css('width',200);\n\t\tthis.$el.css('height',100);\n\t\tthis.$el.addClass('shape');\n\t\tthis.$el.addClass('draggable');\n\n\t\tthis.input = document.createElement('textarea');\n\t\tthis.input.type = 'text';\n\t\tthis.$el.css('value', this.text);\n\t\tthis.$el.append(this.input);\n\t\t//save input value\n\t\tthis.text = this.value;\n\t\t\n\t\t$('.app').append(this.$el);\n\t\t$('.shape').click(function(e) {\n\t\t\te.stopPropagation();\n\t\t});\n\t\t$('.draggable').draggable().resizable({ autoHide: false, handles: \"se\" });\n\t\t\n\t\t\n\n\t}\n\tShape.prototype.create = function(x,y,width,height,color,type,content) {\n\t\tconsole.log('recreating shape');\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.$el.css('top',y + 'px');\n\t\tthis.$el.css('left',x +'px');\n\t\tthis.$el.css('width',width);\n\t\tthis.$el.css('height',height);\n\t\t\n\t\tthis.$el.addClass('draggable');\n\n\t\tthis.input.type = 'text';\n\t\tthis.text = content;\n\t\tthis.input.innerText = content;\n\t\tthis.type = type;\n\t\tthis.$el.css('value', this.text);\n\t\tthis.$el.append(this.input);\n\t\t//save input value\n\t\t\n\n\t};\n\t/*Shape.prototype.changeSize = function(event){\n\t\tthis.$el.css('width',event.offsetX);\n\t\tthis.$el.css('height',event.offsetY);\n\n\t};*/\n\tShape.prototype.remove = function(){\n\t\t//this.square.remove();\n\n\t};\n\tShape.prototype.addText = function(){\n\t\t//add event listener for when input loses focus:\n\t\t\n\t};\n\tShape.prototype.hoverHandler = function(e){\n\t\t//show move and scale tool\n\n\t\t//add click listener for move and scale thingy.\n\n\n\t};\n\tShape.prototype.moveHandler = function(e){\n\t\t//event handler for mouseMove\n\t\t//console.log(this);\n\t\t//move to new position\t\n\t\tthis.x = offset.x;\n\t\tthis.y = offset.y;\t\n\n\t\t//update shape?\n\t};\n\tShape.prototype.scaleHandler = function(e){\n\t\t//event handler for mouseMove\n\t\t//scale to new position\n\t\tthis.width = offset.x;\n\t\tthis.height = offset.y;\t\n\n\t\t//update shape?\t\n\t};\n\t/* //example function\n\tShape.prototype.removeHandler = function(){\n\t\tconsole.log('trying to delete the mutherfucker');\n\t\tbean.fire(this, 'remove', this);\n\t}; */\n\t\n\treturn Shape;\n})();","module.exports = (function(){\n\n\tvar shapeTool = true;\n\tfunction Toolbar($el) {\n\t\t//make 2 buttons\n\t\t//handlebars gebruiken maar is overkill momenteel. :)\n\t\tthis.$el = $('<input type=\"button\" class=\"button\" value=\"Shape Tool\" />');\n\t\t\n\t\t$el.append(this.$el);\n\t\tthis.$el.click(this.changeTool);\n\t\t//addEventListener for button: changeTool\t\t\t\n\t}\n\tToolbar.prototype.changeTool = function(e){\n\t\te.stopPropagation();\n\t\tconsole.log('clicking tha button');\n\t\t// switch between makeShape or makeLine tool\n\t\tshapeTool = !shapeTool;\n\t\tif(shapeTool){\n\t\t\tthis.value = 'Shape Tool';\n\t\t\t$('canvas').css('z-index','-1');\n\t\t\t$('.app').css('z-index','0');\n\n\t\t}else{\n\t\t\tthis.value = 'Line Tool';\n\t\t\t$('canvas').css('z-index','0');\n\t\t\t$('.app').css('z-index','-1');\n\t\t}\n\t\t//use bean.fire to communicate this change to FlowchartApplication\n\n\t};\n\t\n\treturn Toolbar;\n})();"]}